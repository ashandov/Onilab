function time(){today=new Date,today=Math.floor((timeend-today)/1e3),tsec=today%60,today=Math.floor(today/60),tsec<10&&(tsec="0"+tsec),tmin=today%60,today=Math.floor(today/60),tmin<10&&(tmin="0"+tmin),thour=today%24,today=Math.floor(today/24),document.getElementsByClassName("counter__days")[0].innerHTML=today,document.getElementsByClassName("counter__hours")[0].innerHTML=thour,document.getElementsByClassName("counter__minutes")[0].innerHTML=tmin,document.getElementsByClassName("counter__seconds")[0].innerHTML=tsec,window.setTimeout("time()",1e3)}document.addEventListener("DOMContentLoaded",(function(){var e=[].slice.call(document.querySelectorAll("img.lazy")),t=[].slice.call(document.querySelectorAll(".lazy-background")),r=[].slice.call(document.querySelectorAll("[data-bg]"));if("IntersectionObserver"in window){let s=new IntersectionObserver((function(e,t){e.forEach((function(e){if(e.isIntersecting){let t=e.target;t.src=t.dataset.src,t.srcset=t.dataset.srcset,t.classList.remove("lazy"),s.unobserve(t)}}))}));e.forEach((function(e){s.observe(e)}));let n=new IntersectionObserver((function(e,t){e.forEach((function(e){e.isIntersecting&&(e.target.classList.add("visible"),n.unobserve(e.target))}))}));t.forEach((function(e){n.observe(e)}));let o=new IntersectionObserver((function(e,t){e.forEach((function(e){if(e.isIntersecting){let t=e.target;t.style.backgroundImage="url("+t.dataset.bg+")",o.unobserve(t)}}))}));r.forEach((function(e){o.observe(e)}))}else e.forEach((function(e){e.src=e.dataset.src,e.srcset=e.dataset.srcset})),t.forEach((function(e){e.classList.add("visible")})),r.forEach((function(e){e.style.backgroundImage="url("+e.dataset.bg+")"}))})),document.addEventListener("DOMContentLoaded",(function(){})),timeend=new Date,timeend=new Date(2020,5,28);var CircularTimer=function(e){var t=this;t.SECONDS_MULTIPLIER=10,t.BASE_LENGTH={days:365,hours:24,minutes:60,seconds:60},t.daysCircle=e.querySelector(".circular-timer__item.days"),t.hoursCircle=e.querySelector(".circular-timer__item.hours"),t.minutesCircle=e.querySelector(".circular-timer__item.minutes"),t.secondsCircle=e.querySelector(".circular-timer__item.seconds"),t.RADIUS=+t.daysCircle.querySelector("circle").getAttribute("r"),t.CIRCUMFERENCE=2*Math.PI*t.RADIUS,t.countDownDate=new Date(e.getAttribute("data-date")).getTime(),t.distance=t.countDownDate-(new Date).getTime(),t.setDashArray=function(){e.querySelectorAll("circle.progress").forEach((function(e){e.style.strokeDasharray=t.CIRCUMFERENCE}))},t.getDistanceData=function(e){return{days:Math.floor(t.distance/864e5),hours:Math.floor(t.distance%864e5/36e5),minutes:Math.floor(t.distance%36e5/6e4),seconds:t.distance%6e4/1e3*t.SECONDS_MULTIPLIER}},t.drawProgress=function(e,r,s,n){var o=n||1,c=s/(t.BASE_LENGTH[r]*o),a=t.CIRCUMFERENCE*(1-c);e.querySelector(".circular-timer__item-value").textContent=Math.floor(s/o),e.querySelector(".progress").style.strokeDashoffset=a},t.countdown=function(){var e=t.getDistanceData();if(e.seconds<=0&&e.minutes<=0&&e.hours<=0&&e.days<=0)return t.stopCountdown(),void t.setZero();t.drawProgress(t.secondsCircle,"seconds",e.seconds,t.SECONDS_MULTIPLIER),t.drawProgress(t.minutesCircle,"minutes",e.minutes),t.drawProgress(t.hoursCircle,"hours",e.hours),t.drawProgress(t.daysCircle,"days",e.days),t.distance-=1e3/t.SECONDS_MULTIPLIER},t.stopCountdown=function(){clearInterval(t.startCountdown)},t.setZero=function(){t.drawProgress(t.secondsCircle,"seconds",0),t.drawProgress(t.minutesCircle,"minutes",0),t.drawProgress(t.hoursCircle,"hours",0),t.drawProgress(t.daysCircle,"days",0)},t.setDashArray(),t.startCountdown=setInterval(t.countdown,1e3/t.SECONDS_MULTIPLIER)},introTimer=new CircularTimer(document.querySelector(".bloc"));CircularTimer(document.querySelector(".bloc"));